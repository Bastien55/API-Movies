using System;
using System.Collections.Generic;
using API_Movies.Models;
using Microsoft.EntityFrameworkCore;

namespace API_Movies.Context;

/// <summary>
/// Class generated by the ORM Entity Framework and communicate with the database
/// </summary>
public partial class ApiMovieContext : DbContext
{
    public ApiMovieContext()
    {
    }

    public ApiMovieContext(DbContextOptions<ApiMovieContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Acteur> Acteurs { get; set; }

    public virtual DbSet<Cast> Casts { get; set; }

    public virtual DbSet<Film> Films { get; set; }

    public virtual DbSet<Personne> Personnes { get; set; }

    public virtual DbSet<Realisateur> Realisateurs { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_general_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Acteur>(entity =>
        {
            entity.HasKey(e => e.ActeurId).HasName("PRIMARY");

            entity.ToTable("acteurs");

            entity.HasIndex(e => e.PersonneId, "personne_id");

            entity.Property(e => e.ActeurId)
                .HasColumnType("int(11)")
                .HasColumnName("acteur_id");
            entity.Property(e => e.PersonneId)
                .HasColumnType("int(11)")
                .HasColumnName("personne_id");

            entity.HasOne(d => d.Personne).WithMany(p => p.Acteurs)
                .HasForeignKey(d => d.PersonneId)
                .HasConstraintName("acteurs_ibfk_1");
        });

        modelBuilder.Entity<Cast>(entity =>
        {
            entity.HasKey(e => e.CastId).HasName("PRIMARY");

            entity.ToTable("cast");

            entity.HasIndex(e => e.ActeurId, "acteur_id");

            entity.HasIndex(e => e.RealisateurId, "realisateur_id");

            entity.Property(e => e.CastId)
                .HasColumnType("int(11)")
                .HasColumnName("cast_id");
            entity.Property(e => e.ActeurId)
                .HasColumnType("int(11)")
                .HasColumnName("acteur_id");
            entity.Property(e => e.RealisateurId)
                .HasColumnType("int(11)")
                .HasColumnName("realisateur_id");

            entity.HasOne(d => d.Acteur).WithMany(p => p.Casts)
                .HasForeignKey(d => d.ActeurId)
                .HasConstraintName("cast_ibfk_1");

            entity.HasOne(d => d.Realisateur).WithMany(p => p.Casts)
                .HasForeignKey(d => d.RealisateurId)
                .HasConstraintName("cast_ibfk_2");
        });

        modelBuilder.Entity<Film>(entity =>
        {
            entity.HasKey(e => e.FilmId).HasName("PRIMARY");

            entity.ToTable("film");

            entity.HasIndex(e => e.CastId, "FK_FilmCast");

            entity.Property(e => e.FilmId)
                .HasColumnType("int(11)")
                .HasColumnName("film_id");
            entity.Property(e => e.CastId)
                .HasColumnType("int(11)")
                .HasColumnName("cast_id");
            entity.Property(e => e.DateDeParution)
                .HasDefaultValueSql("current_timestamp()")
                .HasColumnName("Date_de_parution");
            entity.Property(e => e.Description).HasMaxLength(2048);
            entity.Property(e => e.Nom).HasMaxLength(128);

            entity.HasOne(d => d.Cast).WithMany(p => p.Films)
                .HasForeignKey(d => d.CastId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_FilmCast");
        });

        modelBuilder.Entity<Personne>(entity =>
        {
            entity.HasKey(e => e.PersonneId).HasName("PRIMARY");

            entity.ToTable("personnes");

            entity.Property(e => e.PersonneId)
                .HasColumnType("int(11)")
                .HasColumnName("personne_id");
            entity.Property(e => e.DateNaissance).HasColumnName("date_naissance");
            entity.Property(e => e.Nom)
                .HasMaxLength(30)
                .HasColumnName("nom");
            entity.Property(e => e.Prenom)
                .HasMaxLength(30)
                .HasColumnName("prenom");
        });

        modelBuilder.Entity<Realisateur>(entity =>
        {
            entity.HasKey(e => e.RealisateurId).HasName("PRIMARY");

            entity.ToTable("realisateur");

            entity.HasIndex(e => e.PersonneId, "personne_id");

            entity.Property(e => e.RealisateurId)
                .HasColumnType("int(11)")
                .HasColumnName("realisateur_id");
            entity.Property(e => e.PersonneId)
                .HasColumnType("int(11)")
                .HasColumnName("personne_id");

            entity.HasOne(d => d.Personne).WithMany(p => p.Realisateurs)
                .HasForeignKey(d => d.PersonneId)
                .HasConstraintName("realisateur_ibfk_1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
